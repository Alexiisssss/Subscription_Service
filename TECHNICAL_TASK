# 🛠️ Техническое задание: Реализация микросервиса

## 📌 Описание задачи

Необходимо разработать **микросервис** на **Spring Boot 3**, который будет предоставлять **REST API** для управления **пользователями** и их **подписками** на сервисы.

- Язык разработки: **Java 17**

---

## ✅ Функциональные требования

### 📂 API для управления пользователями
- ✅ Создание пользователя
- 🔍 Получение информации о пользователе
- 📝 Обновление данных пользователя
- ❌ Удаление пользователя

### 📂 API для подписок
- ➕ Добавление подписки пользователю
- 📄 Получение списка подписок пользователя
- 🗑 Удаление подписки

> Подписки — это цифровые сервисы, такие как **YouTube Premium**, **VK Музыка**, **Яндекс.Плюс**, **Netflix** и другие стриминговые платформы.

---

## 🗄 Интеграция с базой данных

- Использовать **PostgreSQL**
- Таблицы:
  - `users`
  - `subscriptions`

---

## 📋 Логирование

- Использовать **SLF4J** как интерфейс логирования.

---

## 🐳 Docker

- Создать `Dockerfile` для развертывания сервиса.
- Разработать `docker-compose.yml` для локального запуска микросервиса с базой данных.

---

## 📡 Требования к API

| Метод | URI | Описание |
|-------|-----|----------|
| `POST` | `/users` | Создать пользователя |
| `GET` | `/users/{id}` | Получить пользователя по ID |
| `PUT` | `/users/{id}` | Обновить пользователя |
| `DELETE` | `/users/{id}` | Удалить пользователя |
| `POST` | `/users/{id}/subscriptions` | Добавить подписку |
| `GET` | `/users/{id}/subscriptions` | Получить подписки пользователя |
| `DELETE` | `/users/{id}/subscriptions/{sub_id}` | Удалить подписку |
| `GET` | `/subscriptions/top` | Получить ТОП-3 популярных подписок |

---

> 📎 Документ подготовлен для реализации проекта **Subscription Service**.
